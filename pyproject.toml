[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ssh-parameter-manager"
version = "2.1.0"
description = "A professional tool for managing Symfony parameters.yml files via SSH"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "SSH Parameter Manager Team"},
]
maintainers = [
    {name = "SSH Parameter Manager Team"},
]
keywords = ["symfony", "parameters", "ssh", "devops", "configuration", "management"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
requires-python = ">=3.8"
dependencies = [
    "PyYAML>=6.0",
    "paramiko>=3.0.0",
    "scp>=0.14.0",
    "flask>=2.0.0",
    "flask-cors>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "safety>=2.0.0",
    "mypy>=0.950",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.0.0",
]

[project.scripts]
ssh-parameter-manager = "web_server:main"
ssh-manager = "ssh_manager:main"

[project.urls]
Homepage = "https://github.com/yourusername/ssh-parameter-manager"
Documentation = "https://github.com/yourusername/ssh-parameter-manager#readme"
Repository = "https://github.com/yourusername/ssh-parameter-manager.git"
"Bug Tracker" = "https://github.com/yourusername/ssh-parameter-manager/issues"
Changelog = "https://github.com/yourusername/ssh-parameter-manager/blob/main/CHANGELOG.md"

[tool.setuptools]
py-modules = ["ssh_manager", "web_server", "parameter_updater"]

[tool.setuptools.package-data]
"*" = ["*.html", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "setup.py",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "paramiko.*",
    "scp.*",
    "yaml.*",
]
ignore_missing_imports = true 